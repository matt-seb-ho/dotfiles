# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
# <default>
# set $mod Mod4
# <msho>
set $mod Mod1
set $meta Mod4
set $ctrl Control

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
# <default>
# set $term foot
# <msho>
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

# Theme Colors (Rose Pine Dawn)
set $pine_color #31748f
set $text_color #e0def4
set $love_color #eb6f92

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# wallpaper
# <thinkpad>
# output * bg /home/msho/misc/wallpapers/sunrise_cloud.jpg fill
# <jagaimo>
output * bg /home/msho/misc/wallpapers/gracile2.jpg fill
# display scaling for monitor
output DP-1 scale 1.6

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:pointer {
    natural_scroll enabled
}
input type:touchpad {
    natural_scroll enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill
    bindsym $meta+Shift+w kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $meta+Semicolon exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # <thinkpad>
    # status_command /home/msho/misc/status_bar_setup/status_bar.sh
    # <jagaimo>
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        # default
        # statusline #ffffff
        # background #323232
        # inactive_workspace #32323200 #32323200 #5c5c5c
        # msho rose pine
        statusline #e0def4
        background #1f1d2e
        focused_workspace $pine_color $pine_color $text_color
	    urgent_workspace $love_color $love_color $text_color
        inactive_workspace #32323200 #32323200 #5c5c5c
    }

}

### EXTRA KEYBINDS
## workspace management
bindsym $mod+tab          workspace back_and_forth
bindsym $meta+tab         workspace back_and_forth
bindsym $meta+grave       workspace next
bindsym $meta+Shift+grave workspace prev
bindsym $mod+greater move workspace to output right
bindsym $mod+less move    workspace to output left
## notification center (toggle)
bindsym $mod+Shift+n exec swaync-client -t -sw
## volume control
# <thinkpad>
# bindsym XF86AudioMute exec pamixer -t
# bindsym XF86AudioRaiseVolume exec pamixer -i 5
# bindsym XF86AudioLowerVolume exec pamixer -d 5
# <jagaimo>
bindsym $meta+F11 exec pamixer -d 5
bindsym $meta+F12 exec pamixer -i 5
bindsym $meta+F10 exec pamixer -t
## media control (play/pause/next/previous song) <jagaimo>
bindsym $meta+F6 exec playerctl previous
bindsym $meta+F7 exec playerctl play-pause
bindsym $meta+F8 exec playerctl next
bindsym $meta+Shift+f11 exec playerctl volume 0.1-
bindsym $meta+Shift+f12 exec playerctl volume 0.1+
## screenshot
# https://www.reddit.com/r/swaywm/comments/bw9m52/how_to_take_a_screenshot_of_currently_active/
bindsym $meta+Shift+3 exec /home/msho/misc/screenshot_setup/screenshot.sh
bindsym $meta+Shift+4 exec /home/msho/misc/screenshot_setup/screenshot_region.sh
## logout on keybind
bindsym $meta+$ctrl+q exec swaylock

### DAEMONS
## app specific keybinds (e.g. terminal copy paste)
exec_always keyd-application-mapper -d
## notification daemon
exec swaync
## gnome keyring
# from github link
# exec /run/current-system/sw/libexec/polkit-gnome-authentication-agent-1
# from actual installation
exec /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
exec gnome-keyring-daemon --start --components secrets

### AESTHETICS
# remove titlebar
default_border pixel 1
# only show borders when needed (multiple windows in workspace)
smart_borders on
# class border, bground, text
client.urgent  $love_color $love_color $text_color
client.focused $love_color $love_color $text_color

include /etc/sway/config.d/*
